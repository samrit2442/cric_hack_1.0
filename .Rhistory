apl <- read.csv("./APL/all_matches.csv")
apl[is.na(apl)] <- 0
apl <- read.csv("./APL/all_matches.csv")
View(apl)
apl <- read.csv("./APL/all_matches.csv")
bbl <- read.csv("./BBL/all_matches.csv")
bpl <- read.csv("./BPL/all_matches.csv")
cpl <- read.csv("./CPL/all_matches.csv")
ctc <- read.csv("./CTC/all_matches.csv")
ipl <- read.csv("./IPL/all_matches.csv")
lpl <- read.csv("./LPL/all_matches.csv")
mlc <- read.csv("./MLC/all_matches.csv")
ntb <- read.csv("./NTB/all_matches.csv")
psl <- read.csv("./PSL/all_matches.csv")
sat <- read.csv("./SAT/all_matches.csv")
sum_stat <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = over)) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras)
return(df)
}
apl2 <- sum_stat(apl)
sum_stat <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = "over")) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras)
return(df)
}
apl2 <- sum_stat(apl)
View(apl2)
View(apl2)
apl2$over_type |> unique()
bbl2 <- sum_stat(bbl)
bbl2$over_type |> unique()
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = "over")) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras)
return(df)
}
apl2 <- data_clean(apl)
bbl2 <- data_clean(bbl)
bbl2$over_type |> unique()
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2))
return(df)
}
ipl2 <- data_clean(ipl)
ipl2$over_type |> unique()
ipl_bat <- batter_stat(ipl2)
View(ipl_bat)
bowl_wkt <- ipl$wicket_type |> unique()
bowl_wkt
bowl_wkt <- c("caught", "bowled", "lbw", "stumped", "caught and bowled")
View(ipl2)
bowl_wkt <- c("0", "caught", "bowled", "lbw", "stumped", "caught and bowled")
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2))
}
ipl_bowl <- bowler_stat(ipl2)
View(ipl_bowl)
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2))
}
ipl_bowl <- bowler_stat(ipl2)
View(ipl_bowl)
View(ipl_bat)
View(ipl)
View(cpl)
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = "over")) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date)))
return(df)
}
ipl2 <- data_clean(ipl)
View(ipl2)
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, year, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2))
return(df)
}
ipl_bat <- batter_stat(ipl2)
View(ipl_bat)
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2))
}
ipl_bowl <- bowler_stat(ipl2)
View(ipl_bowl)
# Collecting all club competition data ----
library(pacman)
pacman::p_load(tidyverse, plyr, reader)
apl <- read.csv("./APL/all_matches.csv")
bbl <- read.csv("./BBL/all_matches.csv")
bpl <- read.csv("./BPL/all_matches.csv")
cpl <- read.csv("./CPL/all_matches.csv")
ctc <- read.csv("./CTC/all_matches.csv")
ipl <- read.csv("./IPL/all_matches.csv")
lpl <- read.csv("./LPL/all_matches.csv")
mlc <- read.csv("./MLC/all_matches.csv")
ntb <- read.csv("./NTB/all_matches.csv")
psl <- read.csv("./PSL/all_matches.csv")
sat <- read.csv("./SAT/all_matches.csv")
all_wkt <- ipl$wicket_type |> unique()
bowl_wkt <- c("0", "caught", "bowled", "lbw", "stumped", "caught and bowled")
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date)))
return(df)
}
colnames(ipl)
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date))) |>
dplyr::select(year, striker, batting_team, bowling_team, bowler,
runs_off_bat, over, ball, extras, wides, noballs,
byes, legbyes, penalty, wicket_type, player_dismissed) |>
return(df)
}
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date))) |>
dplyr::select(year, striker, batting_team, bowling_team, bowler,
runs_off_bat, over, ball, extras, wides, noballs,
byes, legbyes, penalty, wicket_type, player_dismissed)
return(df)
}
master_data <- bind_rows(apl, bbl, bpl, cpl, ctc, ipl, mlc, ntb, psl, sat)
master_data <- bind_rows(c(apl, bbl, bpl, cpl, ctc, ipl, mlc, ntb, psl, sat))
master_data <- rbind(apl, bbl, bpl, cpl, ctc, ipl, mlc, ntb, psl, sat)
m_data <- data_clean(master_data)
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, year, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
return(df)
}
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
}
m_bat <- batter_stat(m_data)
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date))) |>
dplyr::select(match_id, year, striker, batting_team, bowling_team, bowler,
runs_off_bat, over, ball, extras, wides, noballs,
byes, legbyes, penalty, wicket_type, player_dismissed)
return(df)
}
m_data <- data_clean(master_data)
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, year, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
return(df)
}
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
}
m_bat <- batter_stat(m_data)
View(m_bat)
m_bowl <- bowler_stat(m_data)
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date))) |>
dplyr::select(match_id, year, striker, batting_team, bowling_team, bowler,
runs_off_bat, over, ball, extras, wides, noballs, byes,
legbyes, penalty, team_runs, wicket_type, player_dismissed)
return(df)
}
m_data <- data_clean(master_data)
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, year, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
return(df)
}
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
}
m_bat <- batter_stat(m_data)
m_bowl <- bowler_stat(m_data)
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date))) |>
dplyr::select(match_id, year, striker, batting_team, bowling_team, bowler,
runs_off_bat, over, ball, extras, wides, noballs, byes,
legbyes, penalty, team_runs, wicket_type, player_dismissed)
return(df)
}
m_data <- data_clean(master_data)
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, year, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
return(df)
}
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
}
m_bat <- batter_stat(m_data)
m_bowl <- bowler_stat(m_data)
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date))) |>
dplyr::select(match_id, year, striker, batting_team, bowling_team, bowler,
runs_off_bat, over, ball, extras, wides, noballs, byes,
legbyes, penalty, team_runs, isOut,
wicket_type, player_dismissed)
return(df)
}
m_data <- data_clean(master_data)
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, year, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
return(df)
}
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2)) |>
dplyr::ungroup() |>
dplyr::filter(ing_plyd >= 8)
}
m_bat <- batter_stat(m_data)
m_bowl <- bowler_stat(m_data)
View(m_bowl)
m_data$batting_team |> unique()
m_data$batting_team |> unique() |> sort()
