# Collecting all club competition data ----
library(pacman)
pacman::p_load(tidyverse, plyr, reader)
unzip("apl_male_csv2.zip", exdir = paste0("./APL"))
unzip("./club_cricket/apl_male_csv2.zip", exdir = paste0("./APL"))
unzip("./club_cricket/bbl_male_csv2.zip", exdir = paste0("./BBL"))
# Set the path to the folder containing the zip files
zip_files_path <- "./club_cricket/"
# Get the list of zip files
zip_files <- dir(zip_files_path, pattern = "*.zip")
zip_files
unzip("./club_cricket/ipl_male_csv2.zip", exdir = paste0("./IPL"))
unzip("./club_cricket/bpl_male_csv2.zip", exdir = paste0("./BPL"))
unzip("./club_cricket/cpl_male_csv2.zip", exdir = paste0("./CPL"))
unzip("./club_cricket/ctc_male_csv2.zip", exdir = paste0("./CTC"))
unzip("./club_cricket/lpl_male_csv2.zip", exdir = paste0("./LPL"))
unzip("./club_cricket/mlc_male_csv2.zip", exdir = paste0("./MLC"))
unzip("./club_cricket/ntb_male_csv2.zip", exdir = paste0("./NTB"))
unzip("./club_cricket/psl_male_csv2.zip", exdir = paste0("./PSL"))
unzip("./club_cricket/sat_male_csv2.zip", exdir = paste0("./SAT"))
# Collecting all club competition data ----
library(pacman)
pacman::p_load(tidyverse, plyr, reader)
apl <- read_csv("./APL/all_matches.csv")
View(apl)
bbl <- read_csv("./BBL/all_matches.csv")
View(bbl)
apl <- read_csv("./APL/all_matches.csv")
bpl <- read_csv("./BPL/all_matches.csv")
cpl <- read_csv("./CPL/all_matches.csv")
ctc <- read_csv("./CTC/all_matches.csv")
ipl <- read_csv("./IPL/all_matches.csv")
lpl <- read_csv("./LPL/all_matches.csv")
mlc <- read_csv("./MLC/all_matches.csv")
ntb <- read_csv("./NTB/all_matches.csv")
psl <- read_csv("./PSL/all_matches.csv")
sat <- read_csv("./SAT/all_matches.csv")
View(ntb)
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker))
View(common_plyr)
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker))
View(common_plyr)
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker)) |>
inner_join(distinct(cpl, striker))
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker)) |>
inner_join(distinct(cpl, striker)) |>
inner_join(distinct(ctc, striker))
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker)) |>
inner_join(distinct(cpl, striker)) |>
inner_join(distinct(ctc, striker)) |>
inner_join(distinct(ipl, striker))
View(common_plyr)
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker)) |>
inner_join(distinct(cpl, striker)) |>
inner_join(distinct(ctc, striker)) |>
inner_join(distinct(ipl, striker)) |>
inner_join(distinct(lpl, striker))
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker)) |>
inner_join(distinct(cpl, striker)) |>
inner_join(distinct(ctc, striker)) |>
inner_join(distinct(ipl, striker)) |>
inner_join(distinct(lpl, striker)) |>
inner_join(distinct(mlc, striker))
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker)) |>
inner_join(distinct(cpl, striker)) |>
inner_join(distinct(ctc, striker)) |>
inner_join(distinct(ipl, striker)) |>
inner_join(distinct(lpl, striker)) |>
inner_join(distinct(mlc, striker)) |>
inner_join(distinct(ntb, striker))
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker)) |>
inner_join(distinct(cpl, striker)) |>
inner_join(distinct(ctc, striker)) |>
inner_join(distinct(ipl, striker)) |>
inner_join(distinct(lpl, striker)) |>
inner_join(distinct(mlc, striker)) |>
inner_join(distinct(ntb, striker)) |>
inner_join(distinct(psl, striker))
common_plyr <- inner_join(distinct(apl, striker),
distinct(bbl, striker)) |>
inner_join(distinct(bpl, striker)) |>
inner_join(distinct(cpl, striker)) |>
inner_join(distinct(ctc, striker)) |>
inner_join(distinct(ipl, striker)) |>
inner_join(distinct(lpl, striker)) |>
inner_join(distinct(mlc, striker)) |>
inner_join(distinct(ntb, striker)) |>
inner_join(distinct(psl, striker)) |>
inner_join(distinct(sat, striker))
glimpse(apl)
sum_stat <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- 0
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = over)) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras)
return(df)
}
apl2 <- sum_stat(apl)
sum_stat <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = over)) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras)
return(df)
}
apl2 <- sum_stat(apl)
apl[apl == ""] <- NA
apl[is.na(apl)] <- 0
View(apl)
View(bbl)
apl <- read_csv("./APL/all_matches.csv")
apl[is.na(apl)] <- 0
View(apl)
apl[is.na(apl)] <- "0"
apl <- read.csv("./APL/all_matches.csv")
View(apl)
apl[is.na(apl)] <- "0"
apl <- read.csv("./APL/all_matches.csv")
apl[is.na(apl)] <- 0
apl <- read.csv("./APL/all_matches.csv")
View(apl)
apl <- read.csv("./APL/all_matches.csv")
bbl <- read.csv("./BBL/all_matches.csv")
bpl <- read.csv("./BPL/all_matches.csv")
cpl <- read.csv("./CPL/all_matches.csv")
ctc <- read.csv("./CTC/all_matches.csv")
ipl <- read.csv("./IPL/all_matches.csv")
lpl <- read.csv("./LPL/all_matches.csv")
mlc <- read.csv("./MLC/all_matches.csv")
ntb <- read.csv("./NTB/all_matches.csv")
psl <- read.csv("./PSL/all_matches.csv")
sat <- read.csv("./SAT/all_matches.csv")
sum_stat <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = over)) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras)
return(df)
}
apl2 <- sum_stat(apl)
sum_stat <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = "over")) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras)
return(df)
}
apl2 <- sum_stat(apl)
View(apl2)
View(apl2)
apl2$over_type |> unique()
bbl2 <- sum_stat(bbl)
bbl2$over_type |> unique()
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = "over")) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras)
return(df)
}
apl2 <- data_clean(apl)
bbl2 <- data_clean(bbl)
bbl2$over_type |> unique()
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2))
return(df)
}
ipl2 <- data_clean(ipl)
ipl2$over_type |> unique()
ipl_bat <- batter_stat(ipl2)
View(ipl_bat)
bowl_wkt <- ipl$wicket_type |> unique()
bowl_wkt
bowl_wkt <- c("caught", "bowled", "lbw", "stumped", "caught and bowled")
View(ipl2)
bowl_wkt <- c("0", "caught", "bowled", "lbw", "stumped", "caught and bowled")
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2))
}
ipl_bowl <- bowler_stat(ipl2)
View(ipl_bowl)
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2))
}
ipl_bowl <- bowler_stat(ipl2)
View(ipl_bowl)
View(ipl_bat)
View(ipl)
View(cpl)
data_clean <- function(dataset) {
## Filling the blank entries as NA
dataset[dataset == ""] <- NA
## Filling the NAs with 0
dataset[is.na(dataset)] <- "0"
df <- dataset |>
tibble::as_tibble() |>
dplyr::select(-season, -other_wicket_type, -other_player_dismissed) |>
dplyr::filter(innings == 1 | innings == 2) |>
dplyr::mutate(over = ceiling(ball),
over_type = case_when(
over >= 1 & over <= 6 ~ "Powerplay",
over >= 7 & over <= 16 ~ "Middle Over",
over >= 17 ~ "Death Over",
.default = "over")) |>
dplyr::mutate(isDot = if_else(runs_off_bat == 0, 1, 0),
isFour = if_else(runs_off_bat == 4, 1, 0),
isSix = if_else(runs_off_bat == 6, 1, 0),
isOut = if_else(wicket_type != 0, 1, 0),
team_runs = runs_off_bat + extras,
year = year(as.Date(start_date)))
return(df)
}
ipl2 <- data_clean(ipl)
View(ipl2)
batter_stat <- function(cleaned_data) {
df <- cleaned_data |>
as_tibble() |>
dplyr::group_by(striker, year, batting_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs = sum(runs_off_bat),
balls = length(runs_off_bat),
runs_per_ing = round(runs/ing_plyd, 2),
strike_rate = round(runs/balls*100, 2))
return(df)
}
ipl_bat <- batter_stat(ipl2)
View(ipl_bat)
bowler_stat <- function(cleaned_data) {
df1 <- cleaned_data |>
as_tibble() |>
dplyr::filter(noballs == 0 & wides == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(balls = length(runs_off_bat))
df2 <- cleaned_data |>
dplyr::filter(wicket_type %in% bowl_wkt) |>
dplyr::filter(byes == 0 & legbyes == 0 & penalty == 0) |>
dplyr::group_by(bowler, year, bowling_team) |>
dplyr::summarise(ing_plyd = n_distinct(match_id),
runs_conc = sum(team_runs),
wkts = sum(isOut)) |>
dplyr::inner_join(df1) |>
dplyr::mutate(eco = round(runs_conc/balls*6, 2))
}
ipl_bowl <- bowler_stat(ipl2)
View(ipl_bowl)
